input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
}

type blogUser @model {
  id: ID!
  first_name: String!
  last_name: String
  user_name: String
  email: String
  banner_pic: String
  user_pic: String
  posts: [blogPost] @hasMany
  categories: [categoryPost] @hasMany
  comments: [blogComment] @hasMany
  replies: [replyComment] @hasMany
  createdAt: AWSDateTime!
  # updatedAt: AWSDateTime!
}

type blogPost @model {
  id: ID!
  title: String! @index(name: "bycategory", sortKeyFields: ["categoryId"])
  tags: String
  post_img: String
  explanation: String
  user: blogUser @belongsTo(fields: ["userId"])
  userId: ID!
  category: categoryPost @belongsTo(fields: ["categoryId"])
  categoryId: ID!
  comments: [blogComment] @hasMany
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type blogComment @model {
  id: ID!
  name: String!
  website: String
  email: String
  comment: String
  user: blogUser @belongsTo(fields: ["userId"])
  userId: ID!
  post: blogPost @belongsTo(fields: ["postId"])
  postId: ID! @index(name: "byPost", sortKeyFields: ["comment"])
  replycomments: [replyComment] @hasMany
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type replyComment @model {
  id: ID!
  comment: String
  user: blogUser @belongsTo(fields: ["userId"])
  userId: ID!
  post: blogComment @belongsTo(fields: ["commentId"])
  commentId: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type categoryPost @model {
  id: ID!
  title: String! @index
  user: blogUser @belongsTo(fields: ["userId"])
  userId: ID!
  posts: [blogPost] @hasMany
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}
